// TC O(L1 + (L2 - L1) * 26), SC O(1)

class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        if(s1.size() > s2.size()) return false;
        vector<int> s1map (26, 0), s2map (26, 0);
        
        for(int i = 0; i < s1.size(); i++) {
            s1map[s1[i] - 'a']++;
            s2map[s2[i] - 'a']++;
        }
        
        for(int i = 0; i < s2.length() - s1.length(); i++) {
            if(match_hash(s1map, s2map))
                return true;
            s2map[s2[i] - 'a']--;
            s2map[s2[i + s1.length()] - 'a']++;
        }
        
        return match_hash(s1map, s2map);
        
    }
    
    bool match_hash(vector<int>& A, vector<int>& B) {
        for(int i = 0; i < 26; i++)
            if(A[i] != B[i])
                return false;
        return true;
    }
};
