// TC O(N), SC O(1)

class Solution {
public:
    int longestMountain(vector<int>& arr) {
        int left = 0, max_len = 0;
        bool left_set = false, right_set = false;
        
        for(int i = 1; i < arr.size(); i++) {
            if(arr[i] == arr[i - 1]) {
                left_set = false;
                right_set = false;
            }
            if(arr[i] > arr[i - 1] && !left_set) {
                left_set = true;
                left = i - 1;
            }
            else if(arr[i] > arr[i - 1] && left_set) {
                if(right_set) {
                    right_set = false;
                    left = i - 1;
                }
                continue;
            }
            else if(arr[i] < arr[i - 1] && !left_set) {
                continue;
            }
            else if(arr[i] < arr[i - 1] && left_set){
                right_set = true;
                max_len = max(max_len, i - left + 1);
            }
        }
        
        return max_len;
    }
};
