// TC O(N), SC O(N)

class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        if(!root) return root;
        
        int level = 0;
        vector<int> level_values;
        queue<TreeNode*> Q;
        Q.push(root);
        
        while(!Q.empty()) {
            int n = Q.size();
            vector<int> tmp;
            
            for(int i = 0; i < n; i++) {
                TreeNode *curr = Q.front();
                Q.pop();
                
                if(level % 2) {
                    curr -> val = level_values[n - i - 1];
                }
                
                if(curr -> left) {
                    tmp.push_back(curr -> left -> val);
                    Q.push(curr -> left);
                }
                if(curr -> right) {
                    tmp.push_back(curr -> right -> val);
                    Q.push(curr -> right);
                }
            }
            
            level_values = tmp;
            level++;
        }
        
        return root;
    }
};
