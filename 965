/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree(TreeNode* root) {
        
        unordered_map<TreeNode*, int> preOrder;
        
        stack<TreeNode*> S;
        S.push(root);
        
        int thisVal = root -> val;
        
        while(!S.empty()) {
            TreeNode *curr = S.top();
            
            if(curr == NULL) {
                S.pop();
                continue;                
            }
            if(preOrder[curr] == 0) 
                if(curr -> val != thisVal) 
                    return false;
            
            else if(preOrder[curr] == 1)
                S.push(curr -> left);
            
            else if(preOrder[curr] == 2)
                S.push(curr -> right);
            
            else 
                S.pop();
            
            preOrder[curr]++;
        }
        
        return true;
        
    }
};
