/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int diameter = INT_MIN;
    int diameterOfBinaryTree(TreeNode* root) {
        findLongestDiameter(root);
        return diameter;
    }
    int findLongestDiameter(TreeNode* root) {
        if(!root) return 0;
        
        int leftPath = findLongestDiameter(root -> left);
        int rightPath = findLongestDiameter(root -> right);
        
        diameter = max(diameter, leftPath + rightPath);
        
        return max(leftPath, rightPath) + 1;
    }
};
