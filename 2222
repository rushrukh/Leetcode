// TC O(N), SC O(N)

class Solution {
public:
    long long numberOfWays(string s) {
        int n = s.size();
        vector<int> z_left(n, 0), z_right(n, 0), o_left(n, 0), o_right(n, 0);
        
        int count_1 = 0, count_0 = 0;
        for(int i = 0; i < n; i++) {
            z_left[i] = count_0;
            o_left[i] = count_1;
            
            if(s[i] == '0') count_0++;
            else count_1++;
        }
        
        count_1 = 0, count_0 = 0;
        for(int i = n - 1; i >= 0; i--) {
            z_right[i] = count_0;
            o_right[i] = count_1;
            
            if(s[i] == '0') count_0++;
            else count_1++;
        }
        
        long long result = 0;
        for(int i = 0; i < n; i++) {
            if(s[i] == '0')
                result += o_left[i] * o_right[i];
            else
                result += z_left[i] * z_right[i];
        }
        
        return result;
    }
};
