// TC O(log n), SC O(log n)

class Solution {
public:
    double myPow(double x, int n) {
        long long N = n;
        if (N < 0) {
            x = 1 / x;
            N = -N;
        }
        return fastPow(x, N);
    }
    
    double fastPow(double x, long long n) {
        if(n == 0) return 1.0;
        double half = fastPow(x, n / 2);
        
        if(n % 2 == 1) return half * half * x;
        else return half * half;
    }
};

// TC O(log n), SC O(1)
class Solution {
public:
    double myPow(double x, int n) {
        long long N = n;
        if (N < 0) {
            x = 1 / x;
            N = -N;
        }
        return fastPow(x, N);
    }
    
    double fastPow(double x, long long n) {
        if(n == 0) return 1.0;
        double result = 1, tmp_result = x;
        
        while(n) {
            if(n % 2 == 1) {
                result *= tmp_result;
            }
            tmp_result *= tmp_result;
            n /= 2;
        }
        
        
        return result;
    }
};
