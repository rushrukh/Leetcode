/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int result = 0;
    int longestUnivaluePath(TreeNode* root) {
        if(!root)
            return 0;
        DFS(root);
        return result;
    }
    
    int DFS(TreeNode* root) {
        if(!root)
            return 0;
        
        int l = DFS(root -> left);
        int r = DFS(root -> right);
        
        if(root -> left && root -> val == root -> left -> val) 
            l++;
        else
            l = 0;
        
        if(root -> right && root -> val == root -> right -> val) 
            r++;
        else 
            r = 0;
        
        result = max(result, l + r);
        return max(l, r);
    }
}; 
