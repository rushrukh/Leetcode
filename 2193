// TC O(N^2), SC O(1)

class Solution {
public:
    int minMovesToMakePalindrome(string s) {
        int left = 0, right = s.size() - 1, count = 0;
        
        while(left < right) {
            if(s[left] == s[right]) {
                left++;
                right--;
            }
            else {
                int i = left, j = right;
                
                while(s[i] != s[right])
                    i++;
                
                while(s[j] != s[left])
                    j--;
                
                if(i - left < right - j) {
                    for(int k = i; k > left; k--) {
                        swap(s[k], s[k-1]);
                        count++;
                    }
                }
                
                else {
                    for(int k = j; k < right; k++) {
                        swap(s[k], s[k + 1]);
                        count++;
                    }
                }
            }
        }
        
        return count;
    }
};
