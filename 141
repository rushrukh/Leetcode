/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head || !head -> next)
            return false;
        
        ListNode *fast, *slow;
        fast = head;
        slow = head -> next;
        while(fast && slow && fast != slow) {
            fast = fast -> next;
            slow = slow -> next;
            slow = slow ? slow -> next : NULL;
        }
        return fast == slow;
    }
};

