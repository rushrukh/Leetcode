// TC O(), SC O()

class Solution {
public:
    int n = 0;
    unordered_set<int> cols, diagonals, anti_diagonals;
    int totalNQueens(int n) {
        this -> n = n;
        return find_combinations(0);
    }
    
    int find_combinations(int row) {
        if(row == n) return 1;
        
        int answer = 0;
        
        for(int col = 0; col < n; col++) {
            int diagonal = row - col, anti_diagonal = row + col;
            
            if(cols.find(col) != cols.end() || diagonals.find(diagonal) != diagonals.end() || anti_diagonals.find(anti_diagonal) != anti_diagonals.end()) continue;
            
            cols.insert(col);
            diagonals.insert(diagonal);
            anti_diagonals.insert(anti_diagonal);
            
            answer += find_combinations(row + 1);
            
            cols.erase(col);
            diagonals.erase(diagonal);
            anti_diagonals.erase(anti_diagonal);
        }
        
        return answer;
    }
};
