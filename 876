// TC O(N), SC O(1)

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        int count = 0;
        ListNode* tmp = head;
        
        while(tmp) {
            count++;
            tmp = tmp -> next;            
        }
        
        for(int i = 0; i < count / 2; i++) 
            head = head -> next;
        
        return head;
    }
};


// Fast and Slow pointer

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        if(!head || !head -> next)
            return head;
        ListNode* slow = NULL, *fast = head;
        
        while(fast && fast -> next) {
            slow = slow == NULL ? head : slow -> next;
            fast = fast -> next -> next;
        }
        
        return slow -> next;
    }
};
