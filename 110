/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if(!root)
            return true;
        
        int lHeight = calculateHeight(root -> left);
        int rHeight = calculateHeight(root -> right);
        
        if(lHeight < 0 || rHeight < 0)
            return false;
        
        return  abs(lHeight - rHeight) > 1 ? false : true; 
        
    }
    
    int calculateHeight(TreeNode* root) {
        if(!root)
            return 0;
        
        int lHeight = calculateHeight(root -> left);
        int rHeight = calculateHeight(root -> right);
        
        if(lHeight == -1 || rHeight == -1 || abs(lHeight - rHeight) > 1) 
            return -1;
        
        return 1 + max(lHeight, rHeight);
    }

};
