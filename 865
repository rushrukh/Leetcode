/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* subtreeWithAllDeepest(TreeNode* root) {
        while(root) {
            int l = helper(root -> left), r = helper(root -> right);
            
            if(l > r) root = root -> left;
            else if(l < r) root = root -> right;
            else break;
        }
        
        return root;
    }
    int helper(TreeNode* root) {
        if(!root) return 0;
        return max(1 + helper(root -> left), 1 + helper(root -> right));
    }
};
