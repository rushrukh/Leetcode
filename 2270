// TC O(N), SC O(N)

class Solution {
public:
    int waysToSplitArray(vector<int>& nums) {
        int n = nums.size(), answer = 0;
        vector<long long> left (n, 0), right(n, 0);
        left[0] = nums[0], right[n - 1] = nums[n - 1];
        
        for(int i = 1; i < n; i++)
            left[i] = nums[i] + left[i - 1];
        
        for(int i = n - 2; i >= 0; i--)
            right[i] = nums[i] + right[i + 1];
        
        for(int i = 0; i < n - 1; i++)
            if(left[i] >= right[i + 1])
                answer++;
        
        return answer;
    }
};

// TC O(N), SC O(1)

class Solution {
public:
    int waysToSplitArray(vector<int>& nums) {
        long long total = 0, left = 0, right = 0;
        int answer = 0;
        for(int &num: nums) total += num;
        
        for(int i = 0; i < nums.size() - 1; i++) {
            left += nums[i];
            right = total - left;
            answer = left >= right ? answer + 1 : answer;
        }
        
        return answer;
    }
};
