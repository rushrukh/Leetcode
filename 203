/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if(!head)
            return NULL;
        
        if(head -> val == val) {
            while(head && head -> val == val) {
                head = head -> next;
            }
        }
        
        ListNode* temp = head, *tempTail = head;
        
        while(temp) {
            if(temp -> val == val) {
                if(temp == tempTail) {
                    head = head -> next;
                    temp = head;
                    tempTail = head;
                } else {
                    tempTail -> next = temp -> next; 
                    temp = temp -> next;
                }
            } else {
                tempTail = temp;
                temp = temp -> next;    
            }
        }
        return head;
    }
};
