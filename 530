/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
        int minDifference = INT_MAX;
        TreeNode* prev = NULL;
        
        inOrder(root, prev, minDifference);
        
        return minDifference;
    }
    
    void inOrder(TreeNode* root, TreeNode* &prev, int & minDifference) {
        if(!root) return;
        
        inOrder(root -> left, prev, minDifference);
        
        if(prev)
            minDifference = min(abs(prev -> val - root -> val), minDifference);
        
        prev = root;
        
        inOrder(root -> right, prev, minDifference);
    }
};
