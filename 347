// Min-Heap + HashMap Soln: TC O(N logk) SC O(N + k)

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> hash;
        vector<int> result;
        
        for(int &num: nums)
            hash[num]++;
        
        auto comp = [&hash](int &i, int &j) {
            return hash[i] > hash[j];  
        };
        
        priority_queue<int, vector<int>, decltype(comp)> Q(comp);
        
        for(auto &x: hash) {
            Q.push(x.first);
            
            if(Q.size() > k)
                Q.pop();
        }
        
        while(!Q.empty()) {
            result.push_back(Q.top());
            Q.pop();
        }
        
        return result;
    }
};
