// Min-Heap + HashMap Soln: TC O(N logk) SC O(N + k)

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> hash;
        vector<int> result;
        
        for(int &num : nums) hash[num]++;
        
        auto comp = [&hash](int x, int y) {
            return hash[x] > hash[y];
        };
        
        priority_queue<int, vector<int>, decltype(comp)> Q(comp);
        
        for(auto &x: hash) {
            Q.push(x.first);
            if(Q.size() > k) Q.pop();
        }
        
        while(Q.size()) {
            result.push_back(Q.top());
            Q.pop();
        }
        
        return result;
    }
};
