// TC O(N), SC O(N)

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        if(!intervals.size()) return {newInterval};
        bool interval_inserted = false;
        vector<vector<int>> result;
        
        for(int i = 0; i < intervals.size(); i++) {
            if(!interval_inserted) {
                if(intervals[i][0] > newInterval[0]) {
                    result.push_back(newInterval);
                    interval_inserted = true;
                }
                result.push_back(intervals[i]);
            }
            else result.push_back(intervals[i]);
        }
        
        if(!interval_inserted) result.push_back(newInterval);
        
        intervals.clear();
        for(int i = 0; i < result.size(); i++) {
            if(intervals.empty() || intervals.back()[1] < result[i][0])
                intervals.push_back(result[i]);
            else
                intervals.back()[1] = max(intervals.back()[1], result[i][1]);
        }
        
        return intervals;
    }
};
