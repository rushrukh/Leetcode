// TC O(N + k), SC O(N + k)

class Solution {
public:
    char shift_char(char c, int shift_key) {
        return (c - 'a' + 26 - shift_key) % 26 + 'a';
    }
    int get_shift_key(char c) {
        return c - 'a';
    }
    vector<vector<string>> groupStrings(vector<string>& strings) {
        unordered_map<string, vector<string>> hash;
        vector<vector<string>> result;
        
        for(string &str: strings) {
            int shift_key = get_shift_key(str[0]);
            cout << "shift_key: " << shift_key << endl;
            string hashed_str = "";
            for(char &c: str) {
                hashed_str += shift_char(c, shift_key);
            }
            
            cout << hashed_str << endl;
            hash[hashed_str].push_back(str);
        }
        
        for(auto &vec: hash)
            result.push_back(vec.second);
        
        return result;
    }
};
