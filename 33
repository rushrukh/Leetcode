// TC O(logN), SC O(1)

class Solution {
public:
    int search(vector<int>& A, int target) {
        if(A.size() == 1) return A[0] == target ? 0 : -1;
        
        int l = 0, h = A.size() - 1, m = 0;
        
        while(l < h) {
            m = l + (h - l) / 2;
            
            if(A[m] > A[m + 1]) {
                ++m;
                break;
            }
            else {
                if(A[m] > A[h]) l = m + 1;
                else h = m;
            }
        }
        
        int pivot = m;
        
        l = 0, h = A.size() - 1, m = 0;
        
        if(A[pivot] == target) return pivot;
        else if(target > A[pivot] && target > A[h]) h = pivot - 1;
        else l = pivot + 1;
        
        while(l < h) {
            m = l + (h - l) / 2;
            
            if(A[m] == target) return m;
            else if(A[m] < target) l = m + 1;
            else h = m;
        }
        
        return l < A.size() && A[l] == target ? l : -1;
    }
};
