// TC O(N), SC O(N)

class Solution {
public:
    vector<int> findRedundantConnection(vector<vector<int>>& edges) {
        int n = edges.size();
        vector<int> parent(n + 1, -1);
        
        for(auto &edge: edges) {
            int u = find_parent(parent, edge[0]);
            int v = find_parent(parent, edge[1]);
            
            if(u == v) {
                return edge;
            }
            else {
                if(abs(parent[u]) >= abs(parent[v])) {
                    parent[u] += parent[v];
                    parent[v] = u;
                }
                else {
                    parent[v] += parent[u];
                    parent[u] = v;
                }
            }
        }
        
        return {};
    }
    
    int find_parent(vector<int> &parent, int node) {
        if(parent[node] < 0)
            return node;
        
        return parent[node] = find_parent(parent, parent[node]);
    }
};
