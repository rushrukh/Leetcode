/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> result;
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<int> possibleResult;
        DFS(root, targetSum, possibleResult);
        return result;
    }
    void DFS(TreeNode* root, int targetSum, vector<int>& possibleResult) {
        if(!root) return;
        
        possibleResult.push_back(root -> val);
        DFS(root -> left, targetSum - root -> val, possibleResult);
        DFS(root -> right, targetSum - root -> val, possibleResult);
        
        if(!(targetSum - root -> val) && !root -> left && !root -> right) result.push_back(possibleResult);
        
        possibleResult.pop_back();
    }
};
