/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> result;
    
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        if(!root)
            return {};
        
        vector<int> curr;
        DFS(root, sum, curr);
        return result;
    }
    
    void DFS(TreeNode* root, int currSum, vector<int> curr) {
        if(!root)
            return;
        
        currSum -= root -> val;
        curr.push_back(root -> val);
        
        if(!root -> left && !root -> right && currSum == 0)
            result.push_back(curr);
        
        DFS(root -> left, currSum, curr);
        DFS(root -> right, currSum, curr);
    }
};
