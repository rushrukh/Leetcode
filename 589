/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> preorder(Node* root) {
        
        stack<Node *> st;
        vector<int> pre;
        
        while(root) {
            pre.push_back(root -> val);
            
            int noOfChildrenOfCurrentNode = root -> children.size();
            
            if(noOfChildrenOfCurrentNode > 1) 
                 for(int i = noOfChildrenOfCurrentNode - 1; i > 0; i--) 
                    st.push(root -> children[i]);
            
            root = noOfChildrenOfCurrentNode ? root -> children[0] : NULL;

            if(!root && !st.empty()) {
                root = st.top();
                st.pop();
            }
        }
        
        return pre;
    }
};
