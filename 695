// TC O(R x C), SC O(R x C)

class Solution {
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int maxArea = 0;
        
        for(int i = 0; i < grid.size(); i++) 
            for(int j = 0; j < grid[0].size(); j++) 
                if(grid[i][j]) maxArea = max(maxArea, DFS(grid, i, j));
        
        return maxArea;
    }
    
    int DFS(vector<vector<int>>& grid, int i, int j) {
        if(i < 0 || i >= grid.size() || j < 0 || j >= grid[0].size() || !grid[i][j]) return 0;
        
        grid[i][j] = 0;
        
        int left = DFS(grid, i, j - 1);
        int right = DFS(grid, i, j + 1);
        int top = DFS(grid, i - 1, j);
        int bottom = DFS(grid, i + 1, j);
        
        return 1 + left + right + top + bottom;
    }
};
