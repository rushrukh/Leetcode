// TC O(N), SC O(N)

class Solution {
public:
    ListNode* deleteDuplicatesUnsorted(ListNode* head) {
        unordered_map<int, int> hash;
        ListNode* tmp = head, *prev = new ListNode();
        ListNode* new_head = prev;
        
        while(tmp) {
            hash[tmp -> val]++;
            tmp = tmp -> next;
        }
        
        tmp = head;
        while(tmp) {
            if(hash[tmp -> val] > 1) {
                prev -> next = tmp -> next;
            }
            else {
                prev -> next = tmp;
                prev = tmp;
            }
            tmp = tmp -> next;
        }
        
        return new_head -> next;
    }
};
