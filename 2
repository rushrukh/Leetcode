/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        ListNode *resultHead = NULL, *curr = resultHead;
        int carry = 0;

        while(l1 || l2) {
            int x = (l1 != NULL) ? l1 -> val : 0;
            int y = (l2 != NULL) ? l2 -> val : 0;
            int sum = carry + x + y;
            carry = sum / 10;
            sum = sum % 10;

            ListNode *tmp = new ListNode;
            tmp -> val = sum;
            tmp -> next = NULL;
            
            if(!curr) {
                resultHead = curr = tmp;
            } else {
                curr -> next = tmp;
                curr = tmp;
            }
            if(l1)
                l1 = l1 -> next;
            if(l2)
                l2 = l2 -> next;
        }
        
        if(carry) {
            ListNode *tmp = new ListNode;
            tmp -> val = carry;
            tmp -> next = NULL;
            curr -> next = tmp;
        }
        return resultHead;
    }
};
