/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head = new ListNode(0);
        ListNode* tracker = head;
        int carry = 0;
        
        while(l1 || l2) {
            int tmpSum = carry;
            carry = 0;
            int x = l1 ? l1 -> val : 0;
            int y = l2 ? l2 -> val : 0;
            tmpSum += x + y;
            carry = tmpSum / 10;
            
            ListNode* tmp = new ListNode(tmpSum % 10);
       
            tracker -> next = tmp;
            tracker = tracker -> next;
            
            l1 = l1 ? l1 -> next : NULL;
            l2 = l2 ? l2 -> next : NULL;
        }
        
        if(carry) {
            ListNode* tmp = new ListNode(carry);
            tracker -> next = tmp;
            tracker = tracker -> next;
        }
        
        return head -> next;
    }
};
