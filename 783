/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDiffInBST(TreeNode* root) {
        int minVal = INT_MAX;
        TreeNode* prev = NULL;
        
        helper(root, prev, minVal);        
        return minVal;
    }
    
    void helper(TreeNode* root, TreeNode* &prev, int &minVal) {
        if(!root) return;
        
        helper(root -> left, prev, minVal);
        
        if(prev) {
            minVal = min(minVal, root -> val - prev -> val);
        }
        prev = root;
        
        helper(root -> right, prev, minVal);
        
        return;
    }
};
