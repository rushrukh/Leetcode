// Binary Search: TC O(N logM), SC O(1)

class Solution {
public:
    int shipWithinDays(vector<int>& weights, int days) {
        int low = *max_element(weights.begin(), weights.end());
        int high = accumulate(weights.begin(), weights.end(), 0);
        
        while(low < high) {
            int mid = low + (high - low) / 2;
            if(canItShip(weights, days, mid)) high = mid;
            else low = mid + 1;
        }
        
        return low;
    }
    
    bool canItShip(vector<int>& weights, int givenDays, int capacity) {
        int actualDays = 1, everydayWeight = 0;
        
        for(int &weight: weights) {
            everydayWeight += weight;
            
            if(everydayWeight > capacity) {
                everydayWeight = weight;
                actualDays++;
            }
            
            if(actualDays > givenDays) break;
        }
        
        return actualDays <= givenDays;
    }
};
