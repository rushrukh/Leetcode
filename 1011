// Binary Search: TC O(N logM), SC O(1)

class Solution {
public:
    int shipWithinDays(vector<int>& weights, int days) {
        int low = *max_element(weights.begin(), weights.end());
        int high = accumulate(weights.begin(), weights.end(), 0);
        
        while(low < high) {
            int mid = low + (high - mid) / 2;
            if(canItShip(weights, days, mid)) high = mid;
            else low = mid + 1;
        }
        
        return low;
    }
    int canItShip(vector<int>& weights, int days, int capacity) {
        int loadOnBelt = 0, daysTaken = 1;
        
        for(int &weight: weights) {
            loadOnBelt += weight;
            
            if(loadOnBelt > capacity) {
                daysTaken++;
                loadOnBelt = weight;
            }
            
            if(daysTaken > days) break;
        }
        
        return daysTaken <= days;
    }
};
