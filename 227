// TC O(N), SC O(N)

class Solution {
public:
    int calculate(string s) {
        char operation = '+';
        stack<int> stk;
        int current = 0;
        
        for(int i = 0; i < s.size(); i++) {
            if(isdigit(s[i])) {
                current *= 10;
                current += s[i] - '0';
            }
            
            if(!isdigit(s[i]) && !isspace(s[i]) || i == s.size() - 1) {
                if(operation == '+')
                    stk.push(current);
                else if(operation == '-')
                    stk.push(-current);
                else if(operation == '*') {
                    int first = stk.top();
                    stk.pop();
                    stk.push(first * current);
                }
                else if(operation == '/') {
                    int first = stk.top();
                    stk.pop();
                    stk.push(first / current);
                }
                
                current = 0;
                operation = s[i];
            }
        }
        
        int result = 0;
        while(!stk.empty()) {
            result += stk.top();
            stk.pop();
        }
        
        return result;
    }
};
