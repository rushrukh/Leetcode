// TC O(N), SC O(N)

class Solution {
public:
    int calculate(string s) {
        int current = 0, result = 0;
        char operation = '+';
        stack<int> S;
        
        for(int i = 0; i < s.size(); i++) {
            if(isdigit(s[i])) {
                current *= 10;
                current += s[i] - '0';
            }
            if(!isdigit(s[i]) && !isspace(s[i]) || i == s.size() - 1) {
                if(operation == '+') {
                    S.push(current);           
                }
                else if(operation == '-') {
                    S.push(-current);
                }
                else if(operation == '*') {
                    int first = S.top();
                    S.pop();
                    S.push(first * current);
                }
                else if(operation == '/') {
                    int first = S.top();
                    S.pop();
                    S.push(first / current);
                }
                
                current = 0;
                operation = s[i];
            }
        }
        
        while(!S.empty()) {
            result += S.top();
            S.pop();
        }
        
        return result;
    }
};
