// TC O(N), SC O(1)
// keep track of both contiguous max and min
// because, the min can become the max if we just see another negative integer

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int currMax = 1, currMin = 1, globMax = INT_MIN;
        
        for(int &num: nums) {
            int tmp = currMax;
            currMax = max({num, num * currMax, num * currMin});
             
            currMin = min({num, currMin * num, tmp * num});
            globMax = max(globMax, currMax);
            
        }
        
        return globMax;
    }
};
