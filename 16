// TC O(n^2), SC O(n) - for sorting

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        sort(nums.begin(), nums.end());
        int closest = 0, diff = INT_MAX, n = nums.size();
        
        for(int i = 0; i < n - 2; i++) {
            int left = i + 1, right = n - 1;
            
            while(left < right) {
                int curr_sum = nums[i] + nums[left] + nums[right];
                if(abs(target - curr_sum) <= diff) {
                    diff = abs(target - curr_sum);
                    closest = curr_sum;
                }
                
                if(curr_sum > target) {
                    right--;
                }
                else if(curr_sum < target) {
                    left++;
                }
                else {
                    break;
                }
            }
        }
        
        return closest;
    }
};
