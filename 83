/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head)
            return NULL;
        
        if(!head -> next)
            return head;
        
        ListNode *currNode = head -> next;
        ListNode *prevNode = head;
        
        while(currNode) {
            if(currNode -> val == prevNode -> val) {
                prevNode -> next = currNode -> next;
                ListNode * del = currNode;
                currNode = currNode -> next;
            }
            else {
                prevNode = currNode;
                currNode = currNode -> next;
            }
        }
        return head;
    }
};
