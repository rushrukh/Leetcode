// TC O(4^N * N), SC O(4^N)

class Solution {
public:
    vector<string> letterCombinations(string digits) {
        if(!digits.size()) return {};
        
        unordered_map<char, string> hash;
        vector<string> result;
        
        hash = {
            {'2', "abc"}, {'3', "def"}, {'4', "ghi"}, {'5', "jkl"},
            {'6', "mno"}, {'7', "pqrs"}, {'8', "tuv"}, {'9', "wxyz"}
        };
        
        queue<string> Q;
        Q.push("");
        
        while(!Q.empty()) {
            string curr = Q.front();
            Q.pop();
            
            // Termination condition
            if(curr.size() == digits.size())
                result.push_back(curr);
            else {
                string tmp = hash[digits[curr.size()]];
                
                for(int i = 0; i < tmp.size(); i++) {
                    Q.push(curr + tmp[i]);
                }
            }
        }
        
        return result;
    }
};
