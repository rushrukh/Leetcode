class Solution {
public:
    bool isHappy(int n) {
        int sum = 0;
        
        while(n > 0) {
            sum += (n % 10) * (n % 10);
            n /= 10;
            
            if(n == 0 && sum > 9) {
                n = sum;
                sum = 0;
            }
        }
        
        return sum == 1 || sum == 7;
    }
};

// Floyd's Cycle Detection:
// TC O(logN), SC O(1)

class Solution {
public:
    bool isHappy(int n) {
        int slow = n, fast = next_guy(n);

        while(fast != 1 && fast != slow) {
            slow = next_guy(slow);
            fast = next_guy(fast);
            fast = next_guy(fast);
        }
        
        return fast == 1;
        
    }
    int next_guy(int n) {
        int sum = 0;
        
        while(n) {
            sum += (n % 10) * (n % 10);
            n /= 10;
        }
        
        return sum;
    }
};
