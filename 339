// TC: O(N), SC O(D) where D is the maximum depth

class Solution {
public:
    int depthSum(vector<NestedInteger>& nestedList) {
        return dfs(nestedList, 1);
    }
    int dfs(vector<NestedInteger>& nestedList, int depth) {
        int result = 0;
        
        for(auto nl: nestedList) {
            if(nl.isInteger()) result += nl.getInteger() * depth;
            else result += dfs(nl.getList(), depth + 1);
        }
        
        return result;
    }
};
