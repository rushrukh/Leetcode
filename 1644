// TC O(N), SC O(N)

class Solution {
public:
    bool seenP = false, seenQ = false;
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        TreeNode* result = LCA(root, p, q);
        
        if(seenP && seenQ) return result;
        else return NULL;
    }
    
    TreeNode* LCA(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(!root) return root;
        
        TreeNode* left = LCA(root -> left, p, q);
        TreeNode* right = LCA(root -> right, p, q);
        
        if(root == p) {
            seenP = true;
            return root;
        }
        if(root == q) {
            seenQ = true;
            return root;
        }
        
        return left && right ? root : left ? left : right; 
    }
};
