// TC O(NlogN + MlogN), SC O(logN)

class Solution {
public:
    vector<vector<string>> suggestedProducts(vector<string>& products, string searchWord) {
        int n = products.size();
        vector<vector<string>> results;
        sort(products.begin(), products.end());
        
        string curr_str = "";
        for(int i = 0; i < searchWord.size(); i++) {
            curr_str += searchWord[i];
            
            int low = 0, high = n - 1;
            
            while(low <= high) {
                int mid = low + (high - low) / 2;
                
                if(products[mid] >= curr_str)
                    high = mid - 1;
                else
                    low = mid + 1;
            }
            
            vector<string> result;
            for(int j = low; j < low + 3 && j < n; j++) {
                if(products[j].find(curr_str) == 0)
                    result.push_back(products[j]);
            }
            
            results.push_back(result);
        }
        
        return results;
    }
};
