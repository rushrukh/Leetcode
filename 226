// Recursive: TC O(N), SC O(N)

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        invert(root);
        return root;
    }
    
    void invert(TreeNode *root) {
        if(!root) return;
        
        swap(root -> left, root -> right);
        invert(root -> left);
        invert(root -> right);
    }
};

// Iterative: TC O(N), SC O(N)

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(!root) return root;
        queue<TreeNode*> Q;
        Q.push(root);
        
        while(!Q.empty()) {
            TreeNode *curr = Q.front();
            Q.pop();
            
            swap(curr -> left, curr -> right);
            
            if(curr -> left) Q.push(curr -> left);
            if(curr -> right) Q.push(curr -> right);
        }
        
        return root;
    }
   
};
