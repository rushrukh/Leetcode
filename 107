/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> result;

        if(!root)
            return result;
        
        queue<TreeNode*> Q;
        Q.push(root);

        while(!Q.empty()) {
            vector<int> tmp;

            int size = Q.size();
            for(int i = 0; i < size; i++) {
                TreeNode* curr = Q.front();

                if(curr -> left) 
                    Q.push(curr -> left);
                
                if(curr -> right) 
                    Q.push(curr -> right);
                
                tmp.push_back(curr -> val);
                Q.pop();
            }
            result.push_back(tmp);
        }
        reverse(result.begin(), result.end());
        return result;
    }
};
