//Two Pointer Soln: TC O(N^2) SC O(1)

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        if(nums.size() < 3) return {};
        sort(nums.begin(), nums.end());
        vector<vector<int>> result;
        
        for(int i = 0; i < nums.size() && nums[i] <= 0; i++) {
            int low = i + 1, high = nums.size() - 1;
            
            if(i == 0 || nums[i] != nums[i - 1]) {
                while(low < high) {
                    if(nums[low] + nums[i] + nums[high] > 0) high--;
                    else if(nums[low] + nums[i] + nums[high] < 0) low++;
                    else {
                        result.push_back({nums[i], nums[low++], nums[high--]});
                        while(low < high && nums[low] == nums[low - 1]) low++;
                    }        
                }
            }
        }
        
        return result;
    }
};

