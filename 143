// TC O(N), SC O(1)

class Solution {
public:
    void reorderList(ListNode* head) {
        ListNode* mid = middleNode(head);
        mid = reverseLL(mid);
        mergeList(head, mid);
    }
    
    ListNode* middleNode(ListNode* head) {
        int count = 0;
        ListNode* tmp = head;
        
        while(tmp) {
            count++;
            tmp = tmp -> next;            
        }
        
        for(int i = 0; i < count / 2; i++) head = head -> next;
        return head;
    }
    
    ListNode* reverseLL(ListNode* head) {
        ListNode* prev = NULL, *curr = head;
        
        while(curr) {
            ListNode* next = curr -> next;
            
            curr -> next = prev;
            prev = curr;
            curr = next;
        }
        
        return prev;
    }
    
    void mergeList(ListNode* l1, ListNode* l2) {
        ListNode* head = l1, *second = l2;
        
        while(second -> next) {
            ListNode* l1Next = head -> next, *l2Next = second -> next;
            
            head -> next = second;
            second -> next = l1Next;
            
            head = l1Next;
            second = l2Next;
        }
    }
};
