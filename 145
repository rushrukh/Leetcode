/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        
        stack<TreeNode*> st;
        vector<int> postOrder;
        
        if(!root)
            return postOrder;
        
        do {
            while(root) {
                if(root -> right) 
                    st.push(root -> right);
                
                st.push(root);
                root = root -> left;
            }

            root = st.top();
            st.pop();
            
            if(!st.empty() && root -> right && root -> right == st.top()) {
                st.pop();
                st.push(root);
                root = root -> right;
            }
            else {
                postOrder.push_back(root -> val);
                root = NULL;
            }
            
        } while(!st.empty());
                
        return postOrder;
    }
};
