/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    int maxDepth(Node* root) {
        
        if(!root)
            return 0;
        
        queue<pair<Node*,int>> Q;
        Q.push({root, 1});
        
        int maxDepth = INT_MIN;
        
        while(!Q.empty()) {
            Node *tmp = Q.front().first;
            int depthForNow = Q.front().second;
            
            Q.pop();
            
            if(!tmp -> children.empty()) 
                for(auto a : tmp -> children) 
                    Q.push({a, depthForNow + 1});
            
            maxDepth = max(maxDepth, depthForNow);
        }
        
        return maxDepth;
    }
};
