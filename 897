/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* increasingBST(TreeNode* root) {
        
        TreeNode *newRoot = NULL, *currNode = NULL;
        stack<TreeNode*> S;
         
        do {
            while(root) {
                S.push(root);
                root = root -> left;
            }
            
            TreeNode* tmp = S.top();
            S.pop();
            
            if(!newRoot) {
                newRoot = tmp;
                currNode = newRoot;
            }
            else {
                currNode -> right = tmp;
                currNode -> left = NULL;
                currNode = currNode -> right;
            }
            
            root = tmp -> right;
            
        } while(!S.empty() || root);
        
        return newRoot;
    }
};
