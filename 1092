class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        int m = str1.size(), n = str2.size();
        int DP[m + 1][n + 1];
        
        for(int i = 0; i < m + 1; i++)
            for(int j = 0; j < n + 1; j++)
                if(i == 0 || j == 0) DP[i][j] = 0;

        for(int i = 1; i < m + 1; i++)
            for(int j = 1; j < n + 1; j++)
                if(str1[i - 1] == str2[j - 1]) DP[i][j] = 1 + DP[i - 1][j - 1];
                else DP[i][j] = max(DP[i][j - 1], DP[i - 1][j]);
            
        int i = m, j = n;
        string result;
        
        while(i > 0 && j > 0) {
            if(str1[i - 1] == str2[j - 1]) result += str1[i - 1], i--, j--;
            else if(DP[i][j - 1] > DP[i - 1][j]) result += str2[j - 1], j--;
            else result += str1[i - 1], i--;
        }
        
        while(i > 0)
            result += str1[i - 1], i--;
        
        while(j > 0)
            result += str2[j - 1], j--;
        
        reverse(result.begin(), result.end());
        return result;
    }
};
