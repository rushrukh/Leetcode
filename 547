class Solution {
public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int count = 0;
        vector<bool> visited (isConnected.size(), false);
        
        for(int i = 0; i < isConnected.size(); i++) {
            if(!visited[i]) {
                count++;
                DFS(isConnected, i, visited);
            } 
        }
        
        return count;
    }
    
    void DFS(vector<vector<int>>& isConnected, int source, vector<bool> &visited) {
        visited[source] = true;
        
        for(int i = 0; i < isConnected[source].size(); i++) {
            if(i == source) continue;
            
            if(isConnected[source][i] && !visited[i])
                DFS(isConnected, i, visited);
        }
    }
};
