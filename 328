/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head || !head -> next || !head -> next -> next)
            return head;
        
        ListNode *odd = head;
        ListNode *even = head -> next;
        ListNode *tmpOdd = head;
        ListNode *tmpEven = head -> next;
        
        while(odd && even) {
            if(odd -> next) {
                odd -> next = odd -> next -> next;
                odd = odd -> next;         
            }
            
            if(odd)
                tmpOdd = odd;
            
            if(even -> next) {
                even -> next = even -> next -> next;
                even = even -> next;            
            }
        }
            
        tmpOdd -> next = tmpEven;

        return head;
    }
};
