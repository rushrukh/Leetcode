// TC O(N) SC O(N)

class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        TreeNode* root = new TreeNode(preorder[0]);
        
        for(int i = 1; i < preorder.size(); i++)
            preOrder(root, preorder[i]);
        
        return root;
    }
    
    TreeNode* preOrder(TreeNode* root, int val) {
        if(root == NULL)
            root = new TreeNode(val);
        else if(val < root -> val) 
            root -> left = preOrder(root -> left, val);
        else if(val > root -> val)
            root -> right = preOrder(root -> right, val);
        
        return root;
    }
};

class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        if(!preorder.size()) return NULL;
        
        TreeNode* root = new TreeNode(preorder[0]);
        vector<int> left, right;

        for(int i = 1; i < preorder.size(); i++) {
            if(preorder[i] < preorder[0]) left.push_back(preorder[i]);
            else right.push_back(preorder[i]);
        }
        
        root -> left = bstFromPreorder(left);
        root -> right = bstFromPreorder(right);
        
        return root;
    }
};
