/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        queue<TreeNode*> Q;
        Q.push(root);
        
        int maxSum = INT_MIN, minLevel = INT_MAX;
        
        int currLevel = 0;
        while(!Q.empty()) {
            currLevel++;
            int currentQueueSize = Q.size();
            int currentSum = 0;
            for(int i = 0; i < currentQueueSize; i++) {
                TreeNode* currNode = Q.front();
                Q.pop();
                currentSum += currNode -> val;
                
                if(currNode -> left)
                    Q.push(currNode -> left);
                if(currNode -> right)
                    Q.push(currNode -> right);
            }
            
            if(currentSum > maxSum) {
                maxSum = currentSum;
                minLevel = currLevel;
            }
        }
        
        return minLevel;
    }
};
