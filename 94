//Iterative Soln:

class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        
        stack<TreeNode*> st;
        vector<int> inOrder;
        
        if(!root)
            return inOrder;
        
        do {
            while(root) {
                st.push(root);
                root = root -> left;            
            }
            
            root = st.top();
            st.pop();
            inOrder.push_back(root -> val);
            
            root = root -> right ? root -> right : NULL;
            
        } while(!st.empty() || root);
        
        return inOrder;
    }
};

//Recursive Soln:

class Solution {
public:
    vector<int> result;
    vector<int> inorderTraversal(TreeNode* root) {
        inorder(root);
        return result;
    }
    void inorder(TreeNode* root) {
        if(!root) return;
        
        inorder(root -> left);
        result.push_back(root -> val);
        inorder(root -> right);
    }
};
