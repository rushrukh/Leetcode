/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int preOrder(TreeNode *t, int L, int R) {
        
        if(!t)
            return 0;
        
        int sum = 0;
        int lVal = 0, rVal = 0;
        
        if(t) {
            if((t -> val >= L) && (t -> val <= R)) 
                sum += t -> val;
            
            if(t -> val > L)
                lVal =  preOrder(t -> left, L, R);
            
            if(t -> val < R)
                rVal = preOrder(t -> right, L, R);
        }
        
        return sum + lVal + rVal;
    }
    
    int rangeSumBST(TreeNode* root, int L, int R) {
        return preOrder(root, L, R);
    }
};
