// DFS Soln: TC O(N + M) N = Number of Nodes, M = Number of Edges, SC O(N)

class Solution {
public:
    unordered_map<Node*, Node*> visited;
    Node* cloneGraph(Node* node) {
        if(!node) return node;
        
        Node* newNode = new Node(node -> val);
        visited[node] = newNode;
        
        for(int i = 0; i < node -> neighbors.size(); i++) {
            if(visited.find(node -> neighbors[i]) == visited.end())
                newNode -> neighbors.push_back(cloneGraph(node -> neighbors[i]));
            else
                newNode -> neighbors.push_back(visited[node -> neighbors[i]]);
        }
        
        return newNode;
    }
};
