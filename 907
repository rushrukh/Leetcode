// TC O(N), SC O(N)

class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        
        vector<int> pse (n, -1), nse(n, n);
        stack<int> s;
        
        for(int i = 0; i < n; i++) {
            while(!s.empty() && arr[s.top()] > arr[i]) {
                s.pop();
            }
            
            pse[i] = s.empty() ? -1 : s.top();
            s.push(i);
        }
        
        s = {};
        for(int i = n - 1; i >= 0; i--) {
            while(!s.empty() && arr[s.top()] >= arr[i]) {
                s.pop();
            }
            
            nse[i] = s.empty() ? n : s.top();
            s.push(i);
        }
        
        long long int answer = 0, mod = 1e9 + 7;
        
        for(int i = 0; i < n; i++) {
            int prev = i - pse[i], next = nse[i] - i;
            
            answer = (((arr[i] % mod) * prev * next) % mod + answer) % mod;
        }
        
        return answer;
    }
};
