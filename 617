/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preOrder(TreeNode *t1, TreeNode *t2) {
        
        if(t1 && t2) {
            t1 -> val += t2 -> val;
            
            if(t1 -> left && t2 -> left)
                preOrder(t1 -> left, t2 -> left);
            
            else if(!t1 -> left && t2 -> left) 
                t1 -> left = t2 -> left;
            
            if(t1 -> right && t2 -> right)
                preOrder(t1 -> right, t2 -> right);
            
            else if(!t1 -> right && t2 -> right) 
                t1 -> right = t2 -> right;
        }
        
    }
    
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        
        if(!t1 && t2)
            return t2;
        
        preOrder(t1, t2);
        
        return t1;
    }
};
