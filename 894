/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> allPossibleFBT(int n) {
        return helper(n);
    }
    
    vector<TreeNode*> helper(int n) {
        if(n == 1)
            return {new TreeNode()};
        
        vector<TreeNode*> result;
        
        for(int i = 1; i < n; i += 2) {

            vector<TreeNode*> left = helper(i);
            vector<TreeNode*> right = helper(n - i - 1);
            
            for(auto x: left) {
                for(auto y: right) {
                    TreeNode* root = new TreeNode(0, x, y);
                    result.push_back(root);  
                }
            }
        }
        
        return result;
    }
};
